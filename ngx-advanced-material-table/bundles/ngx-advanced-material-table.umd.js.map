{"version":3,"file":"ngx-advanced-material-table.umd.js","sources":["../../../projects/ngx-advanced-material-table/src/lib/interfaces/column-definition.interface.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-advanced-material-table/src/lib/helpers/values.helper.ts","../../../projects/ngx-advanced-material-table/src/lib/interfaces/enums/dialog-action.enum.ts","../../../projects/ngx-advanced-material-table/src/lib/pipes/filter.pipe.ts","../../../projects/ngx-advanced-material-table/src/lib/components/filter-columns/filter-columns.component.ts","../../../projects/ngx-advanced-material-table/src/lib/components/filter-columns/filter-columns.component.html","../../../projects/ngx-advanced-material-table/src/lib/helpers/columns.helper.ts","../../../projects/ngx-advanced-material-table/src/lib/helpers/table-builder.helper.ts","../../../projects/ngx-advanced-material-table/src/lib/services/local-storage.service.ts","../../../projects/ngx-advanced-material-table/src/lib/ngx-advanced-material-table.component.ts","../../../projects/ngx-advanced-material-table/src/lib/ngx-advanced-material-table.component.html","../../../projects/ngx-advanced-material-table/src/lib/modules/material.module.ts","../../../projects/ngx-advanced-material-table/src/lib/ngx-advanced-material-table.module.ts","../../../projects/ngx-advanced-material-table/src/public-api.ts","../../../projects/ngx-advanced-material-table/src/ngx-advanced-material-table.ts"],"sourcesContent":["import { DialogActionType } from './enums/dialog-action.enum';\n\nexport type ColumnValueType = string | number | Date;\n\nexport enum ColumnType {\n    String,\n    DateTime,\n    Date,\n    Time,\n    Actions,\n    DropDown,\n    Icon,\n    NumberInput,\n    DropDownDynamic,\n    Image,\n    Link,\n}\n\n/**\n * IColumnDefinitionBase used to\n */\nexport interface IColumnDefinitionBase {\n    Field: string;\n    Title: string;\n    Display: boolean;\n    SortDirection?: 'asc' | 'desc';\n}\n\nexport interface IColumnDefinition extends IColumnDefinitionBase {\n    ColumnType: ColumnType;\n    MatIconName?: string;\n    IdField?: string;\n    FilterValues?: ColumnValueType[];\n    NumberInputOptions?: {\n        MinInputNumber?: number;\n        MaxInputNumber?: number;\n        MinInputNumberField?: string;\n        MaxInputNumberField?: string;\n    };\n\n    /**\n     * Add another Field's value as a Suffix for the current field\n     */\n    Suffix?: {\n        Field: string;\n    };\n}\n\nexport interface IAdvancedRowMenu {\n    Id: string;\n    Icon: string;\n    Action: number;\n    Text: string;\n    I18nId: string;\n}\n\nexport interface IDistinctColumns {\n    name: ColumnValueType;\n    displayedName: ColumnValueType;\n    checked: boolean;\n}\n\nexport interface IFilterColumnsResponse {\n    action: DialogActionType;\n    sortingHasChanged?: boolean;\n    selectedColumn?: IColumnDefinition;\n}\n\nexport interface IFilterColumnsData {\n    selectedColumn: IColumnDefinition;\n    distinctData: IDistinctColumns[];\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export class Value {\n    static getDistinctItems(items: string[]): string[] {\n        const newArray: string[] = [];\n        items.forEach((item) => {\n            if (newArray.indexOf(item) === -1) {\n                newArray.push(item);\n            }\n        });\n        return newArray;\n    }\n\n    static splitStringBySeperator(text: string, seperator = ','): string[] {\n        if (Value.isNullOrWhiteSpace(text)) {\n            return [];\n        }\n        let strs = text.split(seperator);\n        strs = strs.map((str) => str.trim());\n        return strs.filter((str) => Value.isNotNullOrWhiteSpace(str));\n    }\n\n    static extractValueSplitBySeparator(value: string, separator: string, index: number): string {\n        return value.indexOf(separator) > -1 ? value.split('_')[index] : '';\n    }\n\n    static isNumber(value: any): boolean {\n        if (Value.isNotNullOrUndefined(value) && /^\\d+(\\.\\d+)?$/.test(value.toString())) {\n            return true;\n        }\n        return false;\n    }\n\n    static isNumberWithPattern(value: any, pattern: RegExp): boolean {\n        if (Value.isNotNullOrUndefined(value) && pattern.test(value.toString())) {\n            return true;\n        }\n        return false;\n    }\n\n    static clearArray(value: any): any {\n        if (Value.isArray(value)) {\n            value.splice(0, value.length);\n        }\n    }\n\n    static isArray(value: any): any {\n        if (Value.isNotNullOrUndefined(value) && value instanceof Array) {\n            return true;\n        }\n        return false;\n    }\n\n    static isString(value: any): boolean {\n        if (typeof value === 'string') {\n            return true;\n        }\n        return false;\n    }\n\n    static isArrayWithItems(value: any): any {\n        if (Value.isArray(value) && value.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    static isNullOrUndefined(value: any): any {\n        return !Value.isNotNullOrUndefined(value);\n    }\n\n    static isNotNullOrUndefined(value: any): boolean {\n        if (value !== undefined && value !== null) {\n            return true;\n        }\n        return false;\n    }\n\n    static isNotNullOrWhiteSpace(value: string): boolean {\n        if (Value.isNotNullOrUndefined(value) && value.trim() !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    static isNullOrWhiteSpace(value: string): boolean {\n        return !Value.isNotNullOrWhiteSpace(value);\n    }\n\n    static isStringContains(source: string, toBeMatched: string, caseSensitive = true): boolean {\n        if (!source || !toBeMatched) {\n            return false;\n        }\n        if (caseSensitive) {\n            if (source.indexOf(toBeMatched) !== -1) {\n                return true;\n            }\n            return false;\n        } else {\n            if (source.toLocaleLowerCase().indexOf(toBeMatched.toLocaleLowerCase()) !== -1) {\n                return true;\n            }\n            return false;\n        }\n    }\n\n    static isArrayContains(sourceList: string[], toBeMatched: string, caseSensitive = true): boolean {\n        if (!sourceList || !toBeMatched) {\n            return false;\n        }\n\n        for (const source of sourceList) {\n            if (caseSensitive) {\n                if (source.indexOf(toBeMatched) !== -1) {\n                    return true;\n                }\n            } else {\n                if (source.toLocaleLowerCase().indexOf(toBeMatched.toLocaleLowerCase()) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","export enum DialogActionType {\n    Ok = 'Ok',\n    Cancel = 'Cancel',\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IDistinctColumns } from '../interfaces/column-definition.interface';\n\n@Pipe({ name: 'filterCriteria' })\nexport class FilterColumnValuesPipe implements PipeTransform {\n    transform(items: IDistinctColumns[], searchText: string): IDistinctColumns[] {\n        if (!items) {\n            return [];\n        }\n        if (!searchText) {\n            return items;\n        }\n        searchText = searchText.toLowerCase();\n        return items.filter((it) => {\n            return it.name.toString().toLowerCase().includes(searchText);\n        });\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport {\n    IColumnDefinition,\n    ColumnType,\n    IDistinctColumns,\n    IFilterColumnsResponse,\n    IFilterColumnsData,\n} from '../../interfaces/column-definition.interface';\nimport { Value } from '../../helpers/values.helper';\nimport { DialogActionType } from '../../interfaces/enums/dialog-action.enum';\n\n@Component({\n    selector: 'filter-columns',\n    templateUrl: './filter-columns.component.html',\n    styleUrls: ['./filter-columns.component.scss'],\n})\nexport class FilterColumnsComponent implements OnInit {\n    filterForm: FormGroup;\n    searchFiltersValue: string = '';\n    selectedColumn: IColumnDefinition;\n    initialSortingDirection?: 'asc' | 'desc';\n    distinctColumnValues: IDistinctColumns[] = [];\n    cancelResponse: IFilterColumnsResponse = { action: DialogActionType.Cancel };\n    columnType = ColumnType;\n\n    constructor(\n        public dialogRef: MatDialogRef<FilterColumnsComponent>,\n        private fb: FormBuilder,\n        @Inject(MAT_DIALOG_DATA) public context: IFilterColumnsData\n    ) {\n        this.selectedColumn = this.context.selectedColumn;\n        this.distinctColumnValues = this.sortColumns(this.context.distinctData);\n        this.initialSortingDirection = this.selectedColumn.SortDirection;\n        this.filterForm = this.fb.group({\n            SearchFilters: [''],\n        });\n    }\n\n    ngOnInit(): void {\n        this.filterForm.controls.SearchFilters.valueChanges.subscribe(() => this.onSearchFiltersValueChanged());\n    }\n\n    onSearchFiltersValueChanged(): void {\n        this.searchFiltersValue = this.filterForm.controls.SearchFilters.value;\n    }\n\n    onSelectFilter(change: MatCheckboxChange) {\n        this.distinctColumnValues.forEach((x) => {\n            if (x.name === change.source.value) {\n                x.checked = change.checked;\n            }\n        });\n    }\n\n    onSortingValueChange(value: 'asc' | 'desc') {\n        if (this.selectedColumn.SortDirection === value) {\n            this.selectedColumn.SortDirection = undefined;\n        } else {\n            this.selectedColumn.SortDirection = value;\n        }\n    }\n\n    onApplyFiltersButton(): void {\n        this.selectedColumn.FilterValues = [];\n        this.selectedColumn.FilterValues = this.distinctColumnValues.filter((x) => x.checked === true).map((x) => x.name);\n\n        const response: IFilterColumnsResponse = {\n            action: DialogActionType.Ok,\n            sortingHasChanged: this.initialSortingDirection !== this.selectedColumn.SortDirection,\n            selectedColumn: this.selectedColumn,\n        };\n\n        this.dialogRef.close(response);\n    }\n\n    private sortColumns(columns: IDistinctColumns[]): IDistinctColumns[] {\n        if (columns.length === 0) {\n            return [];\n        }\n\n        if (columns[0].name instanceof Date) {\n            columns.sort((a, b) => (a.name > b.name ? 1 : -1));\n        } else if (Value.isNumber(columns[0].name)) {\n            columns.sort((a, b) => (a.name as number) - (b.name as number));\n        } else if (Value.isString(columns[0].name)) {\n            columns.sort((a, b) => (a.name as string).localeCompare(b.name as string));\n        }\n\n        return columns;\n    }\n}\n","<div class=\"filter-columns\">\n    <button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"cancelResponse\">\n        <mat-icon>close</mat-icon>\n    </button>\n\n    <h3 mat-dialog-title i18n=\"@@filter-columns-label-filterRowsHeading\">Filter rows</h3>\n\n    <mat-dialog-content>\n        <form id=\"formFilterRoutesPlanning\" role=\"form\" [formGroup]=\"filterForm\">\n            <mat-form-field>\n                <mat-label i18n=\"@@formControl-label-filterGrid\">Search filters</mat-label>\n                <input matInput type=\"text\" formControlName=\"SearchFilters\" id=\"FilterString\" />\n            </mat-form-field>\n        </form>\n\n        <cdk-virtual-scroll-viewport itemSize=\"15\" class=\"filter-column-viewport\">\n            <span *ngIf=\"distinctColumnValues.length === 0\" i18n=\"@@routeplanning-filter-column-no-values\">No available values</span>\n\n            <div\n                class=\"filter-column-item\"\n                *cdkVirtualFor=\"let value of distinctColumnValues | filterCriteria: searchFiltersValue; let i = index\"\n            >\n                <mat-checkbox [value]=\"value.name\" [checked]=\"value.checked\" (change)=\"onSelectFilter($event)\">\n                    <span> {{ value.displayedName }}</span>\n                </mat-checkbox>\n            </div>\n        </cdk-virtual-scroll-viewport>\n\n        <mat-button-toggle-group name=\"sortDirection\" value=\"{{ selectedColumn.SortDirection }}\">\n            <mat-button-toggle id=\"filter-columns-sort-ascending\" value=\"asc\" (change)=\"onSortingValueChange($event.value)\">\n                <span i18n=\"@@filterColumns-btn-ascsort\">Ascending</span>\n                <mat-icon>arrow_upward</mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle id=\"filter-columns-sort-descending\" value=\"desc\" (change)=\"onSortingValueChange($event.value)\">\n                <span i18n=\"@@filterColumns-btn-descsort\">Descending</span>\n                <mat-icon>arrow_downward</mat-icon>\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button mat-raised-button id=\"filter-columns-close\" [mat-dialog-close]=\"cancelResponse\">\n            <span i18n=\"@@action-btn-cancel\">Cancel</span>\n        </button>\n        <button mat-raised-button id=\"filter-columns-filter\" (click)=\"onApplyFiltersButton()\" color=\"accent\">\n            <span i18n=\"@@action-btn-filter\">Filter</span>\n        </button>\n    </mat-dialog-actions>\n</div>\n","import { ColumnType, IColumnDefinition } from '../interfaces/column-definition.interface';\n\nexport class ColumnHelper {\n    static getContent<T>(field: string, element: T): string {\n        if (field.indexOf('.') === -1) {\n            return element[field];\n        }\n\n        // Activate the way to get text from  Class.Element.XX.XX.XX\n        const fieldNames = field.split('.');\n\n        let returnValue = element[fieldNames[0]];\n        for (let index = 1; index < fieldNames.length; index++) {\n            returnValue = returnValue[fieldNames[index]];\n        }\n\n        return returnValue ?? '';\n    }\n\n    static getToolTip<T>(column: IColumnDefinition, element: T) {\n        if (!element || !column || !element[column.Field]) {\n            return '';\n        }\n\n        let val: string;\n        switch (column.ColumnType) {\n            case ColumnType.Date:\n            case ColumnType.DateTime:\n            case ColumnType.Time:\n            case ColumnType.Icon:\n            case ColumnType.DropDown:\n            case ColumnType.String:\n            case ColumnType.Link:\n            case ColumnType.Image:\n                val = element[column.Field];\n                break;\n\n            default:\n                val = '';\n                break;\n        }\n        return val;\n    }\n\n    static isImmutableColumn(column: IColumnDefinition): boolean {\n        // Columns types that cannot be hidden, moved or filtered\n        return column.ColumnType === ColumnType.Actions || column.ColumnType === ColumnType.Icon;\n    }\n\n    static canColumnBeHidden(column: IColumnDefinition): boolean {\n        return !this.isImmutableColumn(column);\n    }\n\n    static canColumnBeMoved(column: IColumnDefinition): boolean {\n        return !this.isImmutableColumn(column);\n    }\n\n    static canColumnBeFiltered(column: IColumnDefinition): boolean {\n        return !this.isImmutableColumn(column);\n    }\n\n    static isFilteringEnabledOnColumn(column: IColumnDefinition): boolean {\n        if (!this.canColumnBeFiltered(column)) {\n            return false;\n        }\n\n        if (!column.Title) {\n            return false;\n        }\n\n        return true;\n    }\n\n    static hasFiltersOrSortingEnabled(column: IColumnDefinition): boolean {\n        if (!column) {\n            return false;\n        }\n\n        if (column.SortDirection) {\n            return true;\n        }\n\n        if (column.FilterValues && column.FilterValues.length > 0) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static isCellClickable(column: IColumnDefinition): boolean {\n        switch (column.ColumnType) {\n            case ColumnType.Actions:\n            case ColumnType.Icon:\n            case ColumnType.DropDown:\n            case ColumnType.NumberInput:\n            case ColumnType.DropDownDynamic:\n                return false;\n            default:\n                return true;\n        }\n    }\n}\n","import { ColumnHelper } from './columns.helper';\n\nexport class TableBuilderHelper {\n    static buildTable<T>(dataArray: T[], columns: string[], columnNames: string[]): string {\n        let out = '<table><thead><tr>';\n        for (const h of columnNames) {\n            out += '<th>' + h + '</th>';\n        }\n        out += '</tr></thead><tbody>';\n        for (const data of dataArray) {\n            out += '<tr>';\n            for (const j of columns) {\n                if (j !== 'select' && j !== 'actions') {\n                    out += '<td>' + (ColumnHelper.getContent(j, data) || '-') + '</td>';\n                }\n            }\n            out += '</tr>';\n        }\n        out += '</tbody></table>';\n        return out;\n    }\n\n    static printPageBuilderDefault(table: string, printedOnLabel: string = 'Printed On'): string {\n        return (\n            '<html><head>' +\n            '<style type=\"text/css\" media=\"print\">' +\n            '  @page { size: auto;   margin: 25px 0 25px 0; }' +\n            '</style>' +\n            '<style type=\"text/css\" media=\"all\">' +\n            'table{border-collapse: collapse; font-size: 12px; }\\n' +\n            'table, th, td {border: 1px solid grey}\\n' +\n            'th, td {text-align: center; vertical-align: middle;}\\n' +\n            'p {font-weight: bold; margin-left:20px }\\n' +\n            'table { width:94%; margin-left:3%; margin-right:3%}\\n' +\n            'div.bs-table-print { text-align:center;}\\n' +\n            '</style></head><title>Print Table</title><body>' +\n            '<p>' +\n            printedOnLabel +\n            ': ' +\n            new Date() +\n            ' </p>' +\n            '<div class=\"bs-table-print\">' +\n            table +\n            '</div></body></html>'\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Comunication with the localStorage\n */\n@Injectable({ providedIn: 'root' })\nexport class LocalStorageService {\n    set(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n\n    get(key: string): any {\n        return localStorage.getItem(key);\n    }\n\n    remove(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    setAsJson(localStorageKey: string, state: any, replacer?: (number | string)[]): void {\n        localStorage.setItem(localStorageKey, JSON.stringify(state, replacer));\n    }\n\n    getAsJson(localStorageKey: string): any {\n        let storedValue = localStorage.getItem(localStorageKey);\n        return storedValue ? JSON.parse(storedValue) : null;\n    }\n\n    exists(localStorageKey: string): boolean {\n        if (localStorage.getItem(localStorageKey)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import * as _ from 'lodash';\n// FIXME(Fernando Abel): XLSX module not being found\n// import * as xlsx from 'xlsx';\nimport { Component, OnInit, Input, ViewChild, EventEmitter, Output, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { Sort, ArrowViewStateTransition, MatSortHeader, MatSort } from '@angular/material/sort';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { take } from 'rxjs/operators';\nimport { ITableConfiguration } from './interfaces/table-configuration.interface';\nimport {\n    IColumnDefinition,\n    ColumnType,\n    IAdvancedRowMenu,\n    IFilterColumnsData,\n    IFilterColumnsResponse,\n    IDistinctColumns,\n} from './interfaces/column-definition.interface';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { IKeyFilterValues } from './interfaces/key-filter-values.interface';\nimport { TableBuilderHelper } from './helpers/table-builder.helper';\nimport { Value } from './helpers/values.helper';\nimport { FilterColumnsComponent } from './components/filter-columns/filter-columns.component';\nimport { ColumnHelper } from './helpers/columns.helper';\n\n@Component({\n    selector: 'ngx-advanced-material-table',\n    templateUrl: './ngx-advanced-material-table.component.html',\n    styleUrls: ['./ngx-advanced-material-table.component.scss'],\n})\nexport class AdvancedMaterialTableComponent<T = any> implements OnInit, AfterViewInit {\n    @Input()\n    tableConfiguration!: ITableConfiguration;\n\n    @Input()\n    actionConfiguration?: IAdvancedRowMenu[];\n\n    @Input()\n    set tableColumns(value: IColumnDefinition[]) {\n        this.tableColumnList = _.cloneDeep(value);\n    }\n    get tableColumns(): IColumnDefinition[] {\n        return this.tableColumnList;\n    }\n\n    private dataset!: T[];\n    @Input() set data(value: T[]) {\n        this.dataset = value;\n        this.initializeTable();\n    }\n    get data(): T[] {\n        return this.dataset;\n    }\n\n    @Input() set selectedData(initialSelection: T[]) {\n        this.selection = new SelectionModel<any>(true, initialSelection);\n    }\n\n    get selectedData() {\n        return this.selection.selected;\n    }\n\n    @Output() actionSelected: EventEmitter<[T, number]> = new EventEmitter();\n    @Output() iconClicked: EventEmitter<[T, IColumnDefinition]> = new EventEmitter();\n    @Output() rowSelected: EventEmitter<[boolean, T[]]> = new EventEmitter<[boolean, T[]]>();\n    @Output() numberChange: EventEmitter<[T, IColumnDefinition, number]> = new EventEmitter();\n    @Output() catalogueClicked = new EventEmitter();\n    @Output() searchCatalogueClicked = new EventEmitter();\n    @Output() clearCatalogueClicked = new EventEmitter();\n    @Output() hyperLinkClicked = new EventEmitter();\n\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\n    @ViewChild(MatSort) sort!: MatSort;\n\n    dataSource!: MatTableDataSource<T>;\n    displayedColumns: string[] = [];\n\n    noRowsDisplayed: boolean = false;\n    hasHiddenColumns: boolean = false;\n    columnType = ColumnType;\n    selection = new SelectionModel<T>(true, []);\n\n    private tableColumnList: IColumnDefinition[] = [];\n    private mainFilter = '';\n\n    constructor(private dialog: MatDialog, private localStorageService: LocalStorageService, private cdref: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.loadFromStorage();\n        this.renderColumns();\n        this.localizePaginator();\n    }\n\n    ngAfterViewInit(): void {\n        this.sortColumns();\n        this.sort.sortChange.subscribe((col: Sort) => {\n            if (!col.active) {\n                return;\n            }\n\n            this.tableColumnList.forEach((column) => {\n                if (column.Field !== col.active) {\n                    column.SortDirection = undefined;\n                } else {\n                    column.SortDirection = col.direction as 'asc' | 'desc' | undefined;\n                }\n            });\n        });\n\n        this.initializeTable();\n    }\n\n    getContent = (column: IColumnDefinition, element: T) => ColumnHelper.getContent(column.Field, element);\n    getToolTip = (row: T, column: IColumnDefinition) => ColumnHelper.getToolTip<T>(column, row);\n\n    private initializeTable(): void {\n        if (this.data) {\n            this.noRowsDisplayed = this.data.length === 0;\n        }\n\n        this.dataSource = new MatTableDataSource<T>(this.data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sortingDataAccessor = (item, property) => {\n            const content = ColumnHelper.getContent(property, item);\n\n            if (!content) {\n                return '';\n            }\n\n            return content.toString().toLowerCase();\n        };\n        this.dataSource.sort = this.sort;\n\n        this.dataSource.filterPredicate = this.getFilterPredicate();\n        this.applyFilters();\n    }\n\n    private renderColumns(): void {\n        this.displayedColumns = this.tableColumns.filter((column) => column.Display === true).map((column) => column.Field);\n        if (this.tableConfiguration.AllowSelect) {\n            // Add the 'select' column at the start\n            this.displayedColumns.unshift('select');\n        }\n    }\n\n    onRowChecked(row: T): void {\n        if (this.tableConfiguration.MultipleSelect) {\n            this.multipleRowSelection(row);\n        } else {\n            this.singleRowSelection(row);\n        }\n\n        this.rowSelected.emit([false, this.selection.selected]);\n    }\n\n    onDoubleClick(row: T): void {\n        this.rowSelected.emit([true, [row]]);\n    }\n\n    masterToggle(): void {\n        this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach((row) => this.selection.select(row));\n\n        this.rowSelected.emit([false, this.selection.selected]);\n    }\n\n    isAllSelected(): boolean {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    getFilterPredicate() {\n        return (row: T, filters: string): boolean => {\n            const filterData: IKeyFilterValues[] = JSON.parse(filters);\n            for (const filter of filterData) {\n                if (filter.values.length === 0) {\n                    continue;\n                }\n\n                let value = _.get(row, filter.key);\n                if (!value || value === '') {\n                    return false;\n                }\n\n                let index = -1;\n                if (filter.type === ColumnType.DateTime || filter.type === ColumnType.Date) {\n                    const dates = filter.values.map((x) => new Date(x));\n                    index = dates.findIndex((x) => x.getTime() === value.getTime());\n                } else if (Value.isArray(value)) {\n                    value = _.join(value, ',');\n                    index = filter.values.findIndex((x) => _.isEqual(x, value));\n                } else {\n                    index = filter.values.findIndex((x) => _.isEqual(x, value));\n                }\n\n                if (index === -1) {\n                    return false;\n                }\n            }\n\n            if (this.mainFilter && this.mainFilter.length > 0) {\n                let match = false;\n\n                filterData.forEach((filter) => {\n                    const value = _.get(row, filter.key);\n                    const stringValue = value.toLowerCase();\n                    match = match || stringValue.indexOf(this.mainFilter) !== -1;\n                });\n                return match;\n            }\n\n            return true;\n        };\n    }\n\n    onColumnChange(index: number, event: any): void {\n        if (this.tableColumns[index].Display && this.tableColumns.filter((c) => c.Display).length <= 1) {\n            event.preventDefault();\n            return;\n        }\n\n        this.tableColumns[index].Display = !this.tableColumns[index].Display;\n        this.renderColumns();\n        this.saveColumnConfig();\n    }\n\n    clearAllFilters(): void {\n        this.tableColumnList.forEach((column: IColumnDefinition) => {\n            column.SortDirection = undefined;\n            column.FilterValues = undefined;\n        });\n\n        // Clear sort, see https://github.com/angular/components/issues/10524\n        this.clearSort();\n\n        this.dataSource.filter = '[]';\n    }\n\n    /**\n     * Return from the Action Buttons\n     * @param action Value From the Action Buttons\n     */\n    onActionSelected(action: [T, number]): void {\n        this.actionSelected.emit(action);\n    }\n\n    getMinValueForNumberInput(element: T, column: IColumnDefinition): number | undefined {\n        if (!column || !column.NumberInputOptions) {\n            return;\n        }\n\n        if (column.NumberInputOptions.MinInputNumberField) {\n            return element[column.NumberInputOptions.MinInputNumberField];\n        }\n\n        return column.NumberInputOptions.MinInputNumber;\n    }\n\n    getMaxValueForNumberInput(element: T, column: IColumnDefinition): number | undefined {\n        if (!column.NumberInputOptions) {\n            return;\n        }\n\n        if (column.NumberInputOptions.MaxInputNumberField) {\n            return element[column.NumberInputOptions.MaxInputNumberField];\n        }\n\n        return column.NumberInputOptions.MaxInputNumber;\n    }\n\n    iconClick(element: T, column: IColumnDefinition): void {\n        this.iconClicked.emit([element, column]);\n    }\n\n    numberInputChange(element: T, column: IColumnDefinition, event: any): void {\n        this.numberChange.emit([element, column, event.target.value]);\n    }\n\n    onCatalogueClicked(element: T, column: IColumnDefinition): void {\n        this.catalogueClicked.emit([element, column]);\n    }\n\n    onCatalogueSearchClicked(element: T, column: IColumnDefinition): void {\n        this.searchCatalogueClicked.emit([element, column]);\n    }\n\n    onCatalogueClearClicked(element: T, column: IColumnDefinition): void {\n        this.clearCatalogueClicked.emit([element, column]);\n    }\n\n    onHyperLinkClicked(element: T, column: IColumnDefinition): void {\n        this.hyperLinkClicked.emit([element, column]);\n    }\n\n    private multipleRowSelection(row: T): void {\n        this.selection.toggle(row);\n    }\n\n    private singleRowSelection(row: T): void {\n        if (this.selection.isSelected(row)) {\n            this.selection.clear();\n        } else {\n            this.selection.clear();\n            this.selection.toggle(row);\n        }\n    }\n\n    private getDistinctValues(selectedColumn: IColumnDefinition): IDistinctColumns[] {\n        let result: IDistinctColumns[] = [];\n\n        this.data.forEach((row) => {\n            let value = _.get(row, selectedColumn.Field);\n            let displayedValue = value;\n\n            if (Value.isArray(value)) {\n                value = _.join(value, ',');\n                displayedValue = value;\n            }\n\n            if (value === undefined || value === null || value === '') {\n                return;\n            }\n\n            const isAlreadyChecked = selectedColumn.FilterValues ? selectedColumn.FilterValues.findIndex((x) => x === value) >= 0 : false;\n\n            result.push({\n                name: value,\n                displayedName: displayedValue,\n                checked: isAlreadyChecked,\n            });\n        });\n\n        result = _.uniqBy(result, (x: IDistinctColumns) => x.displayedName);\n\n        return result;\n    }\n\n    //#region Drag and Drop\n    headerDragStarted(index: number) {\n        // Purposedly in blank\n    }\n\n    headerDropListDropped(event: CdkDragDrop<IColumnDefinition>) {\n        if (!event) {\n            return;\n        }\n        const displayedColumns = this.displayedColumns.filter((x) => x != 'select');\n        const previousColumnIndex = this.tableColumns.findIndex((x) => x.Field === displayedColumns[event.previousIndex]);\n        const currentColumnIndex = this.tableColumns.findIndex((x) => x.Field === displayedColumns[event.currentIndex]);\n        if (this.canColumnBeMoved(this.tableColumns[currentColumnIndex])) {\n            this.moveItemInArray(this.tableColumns, previousColumnIndex, currentColumnIndex);\n            this.renderColumns();\n            this.saveColumnConfig();\n        }\n    }\n    //#endregion\n\n    //#region Sorting and Filtering\n\n    applyMainFilter(event: any): void {\n        this.mainFilter = event.value.trim().toLowerCase();\n        this.applyFilters();\n    }\n\n    private applyFilters(): void {\n        const filters: IKeyFilterValues[] = [];\n\n        this.tableColumnList.forEach((column) => {\n            if (!column.FilterValues) {\n                column.FilterValues = [];\n            }\n\n            filters.push({\n                key: column.Field,\n                type: column.ColumnType,\n                values: column.FilterValues,\n            });\n        });\n\n        if (filters.length > 0) {\n            this.dataSource.filter = JSON.stringify(filters);\n        }\n    }\n\n    private sortColumn(id: string, start?: 'asc' | 'desc') {\n        const currentColumn = this.sort.active;\n        const currentDirection = this.sort.direction;\n        if (id !== currentColumn || start !== currentDirection) {\n            this.sort.sort({ id: '', start, disableClear: false } as any);\n            this.sort.sort({ id, start, disableClear: false } as any);\n        }\n    }\n\n    private clearSort() {\n        // Clear sort, see https://github.com/angular/components/issues/10524\n        let sortable: any = { id: null, start: null, disableClear: false };\n        this.sort.sort(sortable);\n    }\n\n    private sortColumns(): void {\n        const id = this.tableColumns.findIndex((column) => column.SortDirection);\n        if (id === -1) {\n            return;\n        }\n\n        const columnName = this.tableColumns[id].Field;\n        const direction = this.tableColumns[id].SortDirection;\n\n        this.clearSort();\n\n        if (direction) {\n            this.sortColumn(columnName, direction);\n        }\n\n        // HACK(Fernando Abel): https://github.com/angular/components/issues/10242\n        const activeSortHeader = this.sort.sortables.get(columnName) as MatSortHeader;\n        if (activeSortHeader) {\n            const viewState: ArrowViewStateTransition = activeSortHeader._isSorted()\n                ? { fromState: direction, toState: 'active' }\n                : { fromState: 'active', toState: direction };\n            activeSortHeader._setAnimationTransitionState(viewState);\n        }\n\n        this.cdref.detectChanges();\n    }\n\n    //#endregion\n\n    //#region Dialogs\n\n    openFilterDialog(selectedColumn: IColumnDefinition): void {\n        const data: IFilterColumnsData = {\n            selectedColumn: _.cloneDeep(selectedColumn),\n            distinctData: this.getDistinctValues(selectedColumn),\n        };\n\n        const columnFilteringDialog = this.dialog.open(FilterColumnsComponent, {\n            disableClose: false,\n            autoFocus: false,\n            width: '350px',\n            panelClass: 'overlay-panel',\n            data,\n        });\n\n        columnFilteringDialog\n            .afterClosed()\n            .pipe(take(1))\n            .subscribe((response: IFilterColumnsResponse) => {\n                if (response && response.action === 'Ok') {\n                    this.filterByColumn(response);\n                    this.sortByTable(response);\n                }\n            });\n    }\n\n    //#endregion\n\n    //#region After FilterColumns response\n\n    private filterByColumn(response: IFilterColumnsResponse): void {\n        if (!response || !response.selectedColumn) {\n            return;\n        }\n\n        const column = this.tableColumnList.find((x) => x.Field === response.selectedColumn!.Field);\n\n        if (column) {\n            column.FilterValues = response.selectedColumn.FilterValues;\n        }\n\n        this.applyFilters();\n    }\n\n    private sortByTable(response: IFilterColumnsResponse): void {\n        if (response.sortingHasChanged === false) {\n            return;\n        }\n\n        const columnName = response.selectedColumn!.Field;\n        const direction = response.selectedColumn!.SortDirection;\n\n        this.tableColumnList.forEach((column) => {\n            column.SortDirection = column.Field !== columnName ? undefined : direction;\n        });\n\n        this.sortColumns();\n    }\n\n    //#endregion\n\n    //#region Print and Export\n\n    sendToPrinter(): void {\n        const selectedData = this.getDataToExportPrint();\n        const colNames = this.getDisplayedColumnNames();\n\n        const table = TableBuilderHelper.buildTable(selectedData, this.displayedColumns, colNames);\n\n        if (table) {\n            const newWin = window.open('#');\n            if (!newWin) return;\n            newWin.document.write(TableBuilderHelper.printPageBuilderDefault(table));\n            newWin.print();\n            newWin.close();\n        }\n    }\n\n    // TODO: Create a service for that, currently being used in advanced table\n    exportToExcel(): void {\n        // const tableTitle = TableTags.Table;\n        // const selectedData = this.getSelectedDataWithDisplayedColumnsOnly();\n        // const colNames = this.getDisplayedColumnNames();\n        // // generate a worksheet\n        // const ws = xlsx.utils.aoa_to_sheet([colNames]);\n        // xlsx.utils.sheet_add_json(ws, selectedData, {\n        //     header: this.displayedColumns.slice(1), // remove the 'select' column\n        //     skipHeader: true,\n        //     origin: 1,\n        // });\n        // // add to workbook\n        // const wb = xlsx.utils.book_new();\n        // xlsx.utils.book_append_sheet(wb, ws, tableTitle);\n        // // write workbook and force a download\n        // xlsx.writeFile(wb, `${tableTitle}.xls`, {\n        //     type: 'array',\n        //     bookType: 'xls',\n        // });\n    }\n\n    private getDataToExportPrint(): T[] {\n        if (!this.selection.isEmpty()) {\n            return this.selection.selected;\n        }\n        if (!this.dataSource.sort) {\n            return this.selection.selected;\n        }\n\n        return this.dataSource.sortData(this.dataSource.filteredData, this.dataSource.sort);\n    }\n\n    private getSelectedDataWithDisplayedColumnsOnly(): Partial<T>[] {\n        const selectedData = this.getDataToExportPrint();\n\n        return _.map(selectedData, (obj: T) => {\n            return _.pick(obj, this.displayedColumns);\n        });\n    }\n\n    private getDisplayedColumnNames(): string[] {\n        return this.tableColumns.filter((column) => column.Display === true).map((column) => column.Title);\n    }\n\n    //#endregion\n\n    //#region LocalStorage\n    private loadFromStorage(): void {\n        if (!this.tableConfiguration || !this.tableConfiguration.LocalStorageKey) {\n            return;\n        }\n\n        const localStorageColumns = this.localStorageService.getAsJson(this.tableConfiguration.LocalStorageKey) as IColumnDefinition[];\n\n        if (!localStorageColumns) {\n            return;\n        }\n\n        const tableColumnList = _.cloneDeep(this.tableColumns);\n        for (const obj of tableColumnList) {\n            const index = localStorageColumns.findIndex((i) => i.Field === obj.Field);\n            if (index !== -1) {\n                const previousIndex = this.tableColumns.findIndex((i) => i.Field === obj.Field);\n\n                // update the displayed property\n                this.tableColumns[previousIndex].Display = localStorageColumns[index].Display;\n                // rearange columns\n                this.moveItemInArray(this.tableColumns, previousIndex, index);\n            }\n        }\n    }\n\n    private saveColumnConfig(): void {\n        if (!this.tableConfiguration || !this.tableConfiguration.LocalStorageKey) {\n            return;\n        }\n\n        this.localStorageService.setAsJson(this.tableConfiguration.LocalStorageKey, this.tableColumns);\n    }\n\n    private moveItemInArray(array: any[], previousIndex: number, index: number): void {\n        const temp = array[previousIndex];\n        array[previousIndex] = array[index];\n        array[index] = temp;\n    }\n    //#endregion\n\n    //#region Paginator\n\n    private localizePaginator(): void {\n        if (!this.tableConfiguration.AllowPagination) {\n            return;\n        }\n\n        if (this.paginator === undefined) {\n            return;\n        }\n\n        this.paginator._intl.firstPageLabel = 'First Page';\n        this.paginator._intl.previousPageLabel = 'Previous Page';\n        this.paginator._intl.nextPageLabel = 'Next Page';\n        this.paginator._intl.lastPageLabel = 'Last Page';\n        this.paginator._intl.itemsPerPageLabel = 'Items per Page';\n\n        this.paginator._intl.getRangeLabel = (page: number, pageSize: number, length: number) => {\n            if (length === 0 || pageSize === 0) {\n                return `0 of ${length}`;\n            }\n\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} - ${endIndex} of ${length}`;\n        };\n    }\n\n    //#endregion\n\n    //#region ClassNames\n    getRowClassName(): string {\n        const hasImageColumn = this.tableColumns.find((c) => c.ColumnType === ColumnType.Image);\n\n        if (hasImageColumn) {\n            return 'row-with-image';\n        }\n\n        return '';\n    }\n\n    getColumnClassName(column: IColumnDefinition): string {\n        switch (column.ColumnType) {\n            case ColumnType.Actions:\n                return 'actions';\n            case ColumnType.Icon:\n                return 'icons';\n            case ColumnType.Image:\n                return 'images';\n        }\n        return '';\n    }\n    //#endregion\n\n    //#region Checks (Header, Cell, Column or Row)\n\n    isImmutableColumn = ColumnHelper.isImmutableColumn;\n    canColumnBeHidden = ColumnHelper.canColumnBeHidden;\n    canColumnBeMoved = ColumnHelper.canColumnBeMoved;\n    canColumnBeFiltered = ColumnHelper.canColumnBeFiltered;\n    isFilteringEnabledOnColumn = ColumnHelper.isFilteringEnabledOnColumn;\n    hasFiltersOrSortingEnabled = ColumnHelper.hasFiltersOrSortingEnabled;\n    isCellClickable = ColumnHelper.isCellClickable;\n\n    //#endregion\n}\n","<div>\n    <div class=\"table-top-panel\" *ngIf=\"tableConfiguration.AllowFilter || tableConfiguration.AllowActions\">\n        <div class=\"table-filter\">\n            <ng-container *ngIf=\"tableConfiguration.AllowFilter\">\n                <mat-form-field>\n                    <input\n                        matInput\n                        id=\"{{ tableConfiguration.Id }}-table-filter-field\"\n                        (keyup)=\"applyMainFilter($event.target)\"\n                        i18n-placeholder=\"@@placeholder-text-filterResult\"\n                        placeholder=\"Filter on results...\"\n                    />\n                </mat-form-field>\n            </ng-container>\n        </div>\n\n        <div class=\"table-actions\" *ngIf=\"tableConfiguration.AllowActions\">\n            <button\n                mat-icon-button\n                id=\"{{ tableConfiguration.Id }}-table-clearAllFilters\"\n                onclick=\"this.blur()\"\n                (click)=\"clearAllFilters()\"\n                [matTooltip]=\"templateClearAllFilters.innerText\"\n            >\n                <mat-icon>filter_list_off</mat-icon>\n            </button>\n\n            <button\n                mat-icon-button\n                id=\"{{ tableConfiguration.Id }}-table-showColumns\"\n                [matMenuTriggerFor]=\"visibleColumnsMenu\"\n                [matTooltip]=\"templateShowHide.innerText\"\n            >\n                <mat-icon>view_column</mat-icon>\n            </button>\n\n            <mat-menu #visibleColumnsMenu=\"matMenu\">\n                <ng-template matMenuContent>\n                    <div id=\"{{ tableConfiguration.Id }}-table-columns-checkbox\">\n                        <div\n                            mat-menu-item\n                            *ngFor=\"let column of tableColumns; let i = index\"\n                            (click)=\"onColumnChange(i, $event); $event.stopPropagation()\"\n                        >\n                            <mat-icon *ngIf=\"column.Display\" color=\"accent\">check_box</mat-icon>\n                            <mat-icon *ngIf=\"!column.Display\">check_box_outline_blank</mat-icon>\n                            <span>{{ column.Title }}</span>\n                        </div>\n                    </div>\n                </ng-template>\n            </mat-menu>\n\n            <button\n                mat-icon-button\n                id=\"{{ tableConfiguration.Id }}-table-export-to-excel-button\"\n                [matTooltip]=\"templateExportCsv.innerText\"\n                (click)=\"exportToExcel()\"\n                [disabled]=\"noRowsDisplayed\"\n            >\n                <mat-icon>file_download</mat-icon>\n            </button>\n\n            <button\n                mat-icon-button\n                id=\"{{ tableConfiguration.Id }}-table-print-button\"\n                (click)=\"sendToPrinter()\"\n                [matTooltip]=\"templatePrint.innerText\"\n                [disabled]=\"noRowsDisplayed\"\n            >\n                <mat-icon>print</mat-icon>\n            </button>\n\n            <template #templateShowHide i18n=\"@@table-tooltip-grid-showColumns\">Select visible columns</template>\n            <template #templateExportCsv i18n=\"@@table-tooltip-export-csv\">Export to Excel</template>\n            <template #templateClearAllFilters i18n=\"@@table-tooltip-clear-all-filters\">Clear filters and sorting</template>\n            <template #templatePrint i18n=\"@@action-btn-print\">Print</template>\n        </div>\n    </div>\n\n    <div class=\"table-pagination\" *ngIf=\"tableConfiguration.AllowPagination\">\n        <mat-paginator\n            [pageSizeOptions]=\"[10, 25, 50, 100]\"\n            id=\"{{ tableConfiguration.Id }}-table-paginator\"\n            showFirstLastButtons\n        ></mat-paginator>\n    </div>\n\n    <mat-table\n        id=\"{{ tableConfiguration.Id }}-table\"\n        [dataSource]=\"dataSource\"\n        matSort\n        matSortDisableClear=\"false\"\n        cdkDropListGroup\n        cdkDropList\n        cdkDropListLockAxis=\"x\"\n        cdkDropListOrientation=\"horizontal\"\n        (cdkDropListDropped)=\"headerDropListDropped($event)\"\n    >\n        <!-- Select Check Box Column -->\n        <ng-container matColumnDef=\"select\">\n            <mat-header-cell *matHeaderCellDef>\n                <mat-checkbox\n                    *ngIf=\"tableConfiguration.MultipleSelect\"\n                    (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                >\n                </mat-checkbox>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">\n                <mat-checkbox\n                    (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? onRowChecked(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                >\n                </mat-checkbox>\n            </mat-cell>\n        </ng-container>\n\n        <ng-container *ngFor=\"let column of tableColumns; let i = index\" matColumnDef=\"{{ column.Field }}\">\n            <mat-header-cell\n                *matHeaderCellDef\n                cdkDrag\n                (cdkDragStarted)=\"headerDragStarted(i)\"\n                [cdkDragData]=\"{ name: column.Field }\"\n                [cdkDragDisabled]=\"!canColumnBeMoved(column)\"\n                [ngClass]=\"getColumnClassName(column)\"\n                [matTooltip]=\"column.Title\"\n            >\n                <ng-container *ngIf=\"isFilteringEnabledOnColumn(column)\">\n                    <span mat-sort-header [class.selected]=\"hasFiltersOrSortingEnabled(column)\">{{ column.Title }}</span>\n                    <button\n                        mat-icon-button\n                        disableRipple\n                        onclick=\"this.blur()\"\n                        (click)=\"openFilterDialog(column)\"\n                        [disabled]=\"noRowsDisplayed\"\n                        [class.selected]=\"hasFiltersOrSortingEnabled(column)\"\n                    >\n                        <mat-icon>filter_list</mat-icon>\n                    </button>\n                </ng-container>\n            </mat-header-cell>\n            <mat-cell\n                *matCellDef=\"let element; let rowIndex = index\"\n                [ngClass]=\"getColumnClassName(column)\"\n                (click)=\"isCellClickable(column) ? onRowChecked(element) : null\"\n            >\n                <div [matTooltip]=\"getToolTip(element, column)\">\n                    <ng-container [ngSwitch]=\"column.ColumnType\">\n                        <!-- DateTime -->\n                        <span *ngSwitchCase=\"columnType.DateTime\"> {{ getContent(column, element) }}</span>\n                        <!-- Date -->\n                        <span *ngSwitchCase=\"columnType.Date\"> {{ getContent(column, element) }}</span>\n                        <!-- Time -->\n                        <span *ngSwitchCase=\"columnType.Time\"> {{ getContent(column, element) }}</span>\n                        <!-- String -->\n                        <span *ngSwitchCase=\"columnType.String\"> {{ getContent(column, element) }}</span>\n                        <!-- Link -->\n                        <span *ngSwitchCase=\"columnType.Link\" (click)=\"onHyperLinkClicked(element, column)\">\n                            <a href=\"{{ getContent(column, element) }}\" target=\"_blank\" rel=\"noopener\">{{ getContent(column, element) }}</a>\n                        </span>\n                        <!-- Image -->\n                        <div *ngSwitchCase=\"columnType.Image\">\n                            <img src=\"{{ getContent(column, element) }}\" alt=\"image\" />\n                        </div>\n                        <!-- Actions -->\n                        <!-- <ng-container *ngSwitchCase=\"columnType.Actions\">\n                            <app-advance-table-row-menu\n                                [rowData]=\"element\"\n                                [tableRowMenu]=\"RowActionsConfig\"\n                                (actionSelected)=\"onActionSelected($event)\"\n                            ></app-advance-table-row-menu>\n                        </ng-container> -->\n                        <!-- Dropdown -->\n                        <!-- <ng-container *ngSwitchCase=\"columnType.DropDown\">\n                            <app-advanced-table-row-dropdown\n                                [rowData]=\"element\"\n                                [columnData]=\"column\"\n                                [tableRowDropDown]=\"RowDropDownConfig\"\n                                (dropDownSelected)=\"onDropDownSelected($event)\"\n                            ></app-advanced-table-row-dropdown>\n                        </ng-container> -->\n                        <!-- Icon -->\n                        <ng-container *ngSwitchCase=\"columnType.Icon\">\n                            <button\n                                [id]=\"column.Title + '-' + element[column.IdField!]\"\n                                mat-icon-button\n                                (click)=\"iconClick(element, column)\"\n                            >\n                                <mat-icon> {{ column.MatIconName }}</mat-icon>\n                                {{ getContent(column, element) }}\n                            </button>\n                        </ng-container>\n                        <!-- Number Input -->\n                        <ng-container *ngSwitchCase=\"columnType.NumberInput\">\n                            <mat-form-field floatLabel=\"never\">\n                                <input\n                                    matInput\n                                    onlyNumbers\n                                    type=\"number\"\n                                    [min]=\"getMinValueForNumberInput(element, column)\"\n                                    [max]=\"getMaxValueForNumberInput(element, column)\"\n                                    (change)=\"numberInputChange(element, column, $event)\"\n                                    [value]=\"element[column.Field]\"\n                                />\n                                <!-- Suffix -->\n                                <span matSuffix class=\"suffix\" *ngIf=\"column.Suffix\">\n                                    {{ element[column.Suffix.Field] }}\n                                </span>\n                            </mat-form-field>\n                        </ng-container>\n                    </ng-container>\n                    <!-- Suffix -->\n                    <span class=\"suffix\" *ngIf=\"column.Suffix && column.ColumnType !== columnType.NumberInput\">\n                        {{ element[column.Suffix.Field] }}\n                    </span>\n                </div>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row\n            *matRowDef=\"let row; columns: displayedColumns\"\n            id=\"{{ row.Id }}\"\n            [ngClass]=\"getRowClassName()\"\n            (dblclick)=\"onDoubleClick(row)\"\n        ></mat-row>\n    </mat-table>\n\n    <div *ngIf=\"noRowsDisplayed\" class=\"no-records\">\n        <span i18n=\"@@table-noResultFound\">No matching records found</span>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        CdkTableModule,\r\n        DragDropModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatRippleModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTooltipModule,\r\n        ScrollingModule,\r\n    ],\r\n    providers: [],\r\n})\r\nexport class MaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FilterColumnsComponent } from './components/filter-columns/filter-columns.component';\r\nimport { MaterialModule } from './modules/material.module';\r\nimport { AdvancedMaterialTableComponent } from './ngx-advanced-material-table.component';\r\nimport { FilterColumnValuesPipe } from './pipes/filter.pipe';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule],\r\n    declarations: [AdvancedMaterialTableComponent, FilterColumnsComponent, FilterColumnValuesPipe],\r\n    exports: [AdvancedMaterialTableComponent],\r\n    entryComponents: [FilterColumnsComponent],\r\n})\r\nexport class NgxAdvancedMaterialTableModule {}\r\n","/*\n * Public API Surface of ngx-advanced-material-table\n */\nimport '@angular/localize/init';\n\nexport * from './lib/components/filter-columns/filter-columns.component';\nexport * from './lib/ngx-advanced-material-table.component';\nexport * from './lib/ngx-advanced-material-table.module';\n\nexport * from './lib/interfaces/column-definition.interface';\nexport * from './lib/interfaces/key-filter-values.interface';\nexport * from './lib/interfaces/table-configuration.interface';\n\nexport * from './lib/interfaces/enums/dialog-action.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ColumnType","DialogActionType","Pipe","MAT_DIALOG_DATA","Component","Inject","Injectable","EventEmitter","SelectionModel","_","MatTableDataSource","take","MatPaginator","MatSort","Input","Output","ViewChild","CdkTableModule","DragDropModule","MatButtonModule","MatButtonToggleModule","MatCheckboxModule","MatDialogModule","MatIconModule","MatInputModule","MatMenuModule","MatPaginatorModule","MatRippleModule","MatSortModule","MatTableModule","MatTooltipModule","ScrollingModule","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIYA;IAAZ,WAAY,UAAU;QAClB,+CAAM,CAAA;QACN,mDAAQ,CAAA;QACR,2CAAI,CAAA;QACJ,2CAAI,CAAA;QACJ,iDAAO,CAAA;QACP,mDAAQ,CAAA;QACR,2CAAI,CAAA;QACJ,yDAAW,CAAA;QACX,iEAAe,CAAA;QACf,6CAAK,CAAA;QACL,4CAAI,CAAA;IACR,CAAC,EAZWA,kBAAU,KAAVA,kBAAU;;ICJtB;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;aAEc,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;YACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;QAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;QACL,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;aAEe,OAAO,CAAC,UAAU,EAAE,SAAS;QACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;aAEe,UAAU,CAAC,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;aAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;aAEe,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;aAEa,YAAY,CAAC,CAAC,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;aAEe,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACxC,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,EAAE;wBAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB;aACJ;QACD,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;aAEe,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;QAAC,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAAE,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;aAEe,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;aAEe,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;aAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAAE;aAAM;YAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;SAAE;QAC/G,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;aAEc,YAAY,CAAC,GAAG;QAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;YAAE,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;gBAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAClB,CAAC;aAEe,eAAe,CAAC,GAAG;QAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;QACnL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAClE,IAAI,IAAI,KAAK,GAAG;YAAE,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;QACxE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;QAClL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;IC9OA;QAAA;SA0HC;QAzHU,sBAAgB,GAAvB,UAAwB,KAAe;YACnC,IAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;gBACf,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC/B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;aACJ,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;SACnB;QAEM,4BAAsB,GAA7B,UAA8B,IAAY,EAAE,SAAe;YAAf,0BAAA,EAAA,eAAe;YACvD,IAAI,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;gBAChC,OAAO,EAAE,CAAC;aACb;YACD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,GAAA,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,KAAK,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SACjE;QAEM,kCAA4B,GAAnC,UAAoC,KAAa,EAAE,SAAiB,EAAE,KAAa;YAC/E,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SACvE;QAEM,cAAQ,GAAf,UAAgB,KAAU;YACtB,IAAI,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE;gBAC7E,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,yBAAmB,GAA1B,UAA2B,KAAU,EAAE,OAAe;YAClD,IAAI,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE;gBACrE,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,gBAAU,GAAjB,UAAkB,KAAU;YACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACtB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;aACjC;SACJ;QAEM,aAAO,GAAd,UAAe,KAAU;YACrB,IAAI,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,KAAK,EAAE;gBAC7D,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,cAAQ,GAAf,UAAgB,KAAU;YACtB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,sBAAgB,GAAvB,UAAwB,KAAU;YAC9B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,uBAAiB,GAAxB,UAAyB,KAAU;YAC/B,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC7C;QAEM,0BAAoB,GAA3B,UAA4B,KAAU;YAClC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACvC,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,2BAAqB,GAA5B,UAA6B,KAAa;YACtC,IAAI,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBAC1D,OAAO,IAAI,CAAC;aACf;YACD,OAAO,KAAK,CAAC;SAChB;QAEM,wBAAkB,GAAzB,UAA0B,KAAa;YACnC,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;SAC9C;QAEM,sBAAgB,GAAvB,UAAwB,MAAc,EAAE,WAAmB,EAAE,aAAoB;YAApB,8BAAA,EAAA,oBAAoB;YAC7E,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE;gBACzB,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAa,EAAE;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;oBACpC,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;iBAAM;gBACH,IAAI,MAAM,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC5E,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;SACJ;QAEM,qBAAe,GAAtB,UAAuB,UAAoB,EAAE,WAAmB,EAAE,aAAoB;;YAApB,8BAAA,EAAA,oBAAoB;YAClF,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE;gBAC7B,OAAO,KAAK,CAAC;aAChB;;gBAED,KAAqB,IAAA,eAAA,SAAA,UAAU,CAAA,sCAAA,8DAAE;oBAA5B,IAAM,MAAM,uBAAA;oBACb,IAAI,aAAa,EAAE;wBACf,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;4BACpC,OAAO,IAAI,CAAC;yBACf;qBACJ;yBAAM;wBACH,IAAI,MAAM,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;4BAC5E,OAAO,IAAI,CAAC;yBACf;qBACJ;iBACJ;;;;;;;;;YACD,OAAO,KAAK,CAAC;SAChB;oBACJ;KAAA;;AC1HWC;IAAZ,WAAY,gBAAgB;QACxB,6BAAS,CAAA;QACT,qCAAiB,CAAA;IACrB,CAAC,EAHWA,wBAAgB,KAAhBA,wBAAgB;;ICI5B;QAAA;;QACI,0CAAS,GAAT,UAAU,KAAyB,EAAE,UAAkB;YACnD,IAAI,CAAC,KAAK,EAAE;gBACR,OAAO,EAAE,CAAC;aACb;YACD,IAAI,CAAC,UAAU,EAAE;gBACb,OAAO,KAAK,CAAC;aAChB;YACD,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,EAAE;gBACnB,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aAChE,CAAC,CAAC;SACN;;;8IAZQ,sBAAsB;4IAAtB,sBAAsB;sHAAtB,sBAAsB;sBADlCC,OAAI;uBAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE;;;;QCyB5B,gCACW,SAA+C,EAC9C,EAAe,EACS,OAA2B;YAFpD,cAAS,GAAT,SAAS,CAAsC;YAC9C,OAAE,GAAF,EAAE,CAAa;YACS,YAAO,GAAP,OAAO,CAAoB;YAV/D,uBAAkB,GAAW,EAAE,CAAC;YAGhC,yBAAoB,GAAuB,EAAE,CAAC;YAC9C,mBAAc,GAA2B,EAAE,MAAM,EAAED,wBAAgB,CAAC,MAAM,EAAE,CAAC;YAC7E,eAAU,GAAGD,kBAAU,CAAC;YAOpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;YACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC5B,aAAa,EAAE,CAAC,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;QAED,yCAAQ,GAAR;YAAA,iBAEC;YADG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,2BAA2B,EAAE,GAAA,CAAC,CAAC;SAC3G;QAED,4DAA2B,GAA3B;YACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;SAC1E;QAED,+CAAc,GAAd,UAAe,MAAyB;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAC,CAAC;gBAChC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;oBAChC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;iBAC9B;aACJ,CAAC,CAAC;SACN;QAED,qDAAoB,GAApB,UAAqB,KAAqB;YACtC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,KAAK,KAAK,EAAE;gBAC7C,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,SAAS,CAAC;aACjD;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,KAAK,CAAC;aAC7C;SACJ;QAED,qDAAoB,GAApB;YACI,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,KAAK,IAAI,GAAA,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;YAElH,IAAM,QAAQ,GAA2B;gBACrC,MAAM,EAAEC,wBAAgB,CAAC,EAAE;gBAC3B,iBAAiB,EAAE,IAAI,CAAC,uBAAuB,KAAK,IAAI,CAAC,cAAc,CAAC,aAAa;gBACrF,cAAc,EAAE,IAAI,CAAC,cAAc;aACtC,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAClC;QAEO,4CAAW,GAAX,UAAY,OAA2B;YAC3C,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,EAAE,CAAC;aACb;YAED,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,IAAI,EAAE;gBACjC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAC,CAAC,CAAC;aACtD;iBAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACxC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAM,OAAA,CAAC,CAAC,IAAe,GAAI,CAAC,CAAC,IAAe,GAAA,CAAC,CAAC;aACnE;iBAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACxC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAM,OAAA,CAAC,CAAC,IAAe,CAAC,aAAa,CAAC,CAAC,CAAC,IAAc,CAAC,GAAA,CAAC,CAAC;aAC9E;YAED,OAAO,OAAO,CAAC;SAClB;;;8IAzEQ,sBAAsB,+FAYnBE,kBAAe;uHAZlB,sBAAsB,iECnBnC,8gFAiDA;sHD9Ba,sBAAsB;sBALlCC,YAAS;uBAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,WAAW,EAAE,iCAAiC;wBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;qBACjD;;;kCAaQC,SAAM;mCAACF,kBAAe;;;;IE7B/B;QAAA;SAmGC;QAlGU,uBAAU,GAAjB,UAAqB,KAAa,EAAE,OAAU;YAC1C,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC3B,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;aACzB;;YAGD,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEpC,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACpD,WAAW,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAChD;YAED,OAAO,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,CAAC;SAC5B;QAEM,uBAAU,GAAjB,UAAqB,MAAyB,EAAE,OAAU;YACtD,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAC/C,OAAO,EAAE,CAAC;aACb;YAED,IAAI,GAAW,CAAC;YAChB,QAAQ,MAAM,CAAC,UAAU;gBACrB,KAAKH,kBAAU,CAAC,IAAI,CAAC;gBACrB,KAAKA,kBAAU,CAAC,QAAQ,CAAC;gBACzB,KAAKA,kBAAU,CAAC,IAAI,CAAC;gBACrB,KAAKA,kBAAU,CAAC,IAAI,CAAC;gBACrB,KAAKA,kBAAU,CAAC,QAAQ,CAAC;gBACzB,KAAKA,kBAAU,CAAC,MAAM,CAAC;gBACvB,KAAKA,kBAAU,CAAC,IAAI,CAAC;gBACrB,KAAKA,kBAAU,CAAC,KAAK;oBACjB,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC5B,MAAM;gBAEV;oBACI,GAAG,GAAG,EAAE,CAAC;oBACT,MAAM;aACb;YACD,OAAO,GAAG,CAAC;SACd;QAEM,8BAAiB,GAAxB,UAAyB,MAAyB;;YAE9C,OAAO,MAAM,CAAC,UAAU,KAAKA,kBAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,KAAKA,kBAAU,CAAC,IAAI,CAAC;SAC5F;QAEM,8BAAiB,GAAxB,UAAyB,MAAyB;YAC9C,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SAC1C;QAEM,6BAAgB,GAAvB,UAAwB,MAAyB;YAC7C,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SAC1C;QAEM,gCAAmB,GAA1B,UAA2B,MAAyB;YAChD,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;SAC1C;QAEM,uCAA0B,GAAjC,UAAkC,MAAyB;YACvD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE;gBACnC,OAAO,KAAK,CAAC;aAChB;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACf,OAAO,KAAK,CAAC;aAChB;YAED,OAAO,IAAI,CAAC;SACf;QAEM,uCAA0B,GAAjC,UAAkC,MAAyB;YACvD,IAAI,CAAC,MAAM,EAAE;gBACT,OAAO,KAAK,CAAC;aAChB;YAED,IAAI,MAAM,CAAC,aAAa,EAAE;gBACtB,OAAO,IAAI,CAAC;aACf;YAED,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvD,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;SAChB;QAEM,4BAAe,GAAtB,UAAuB,MAAyB;YAC5C,QAAQ,MAAM,CAAC,UAAU;gBACrB,KAAKA,kBAAU,CAAC,OAAO,CAAC;gBACxB,KAAKA,kBAAU,CAAC,IAAI,CAAC;gBACrB,KAAKA,kBAAU,CAAC,QAAQ,CAAC;gBACzB,KAAKA,kBAAU,CAAC,WAAW,CAAC;gBAC5B,KAAKA,kBAAU,CAAC,eAAe;oBAC3B,OAAO,KAAK,CAAC;gBACjB;oBACI,OAAO,IAAI,CAAC;aACnB;SACJ;2BACJ;KAAA;;ICnGD;QAAA;SA4CC;QA3CU,6BAAU,GAAjB,UAAqB,SAAc,EAAE,OAAiB,EAAE,WAAqB;;YACzE,IAAI,GAAG,GAAG,oBAAoB,CAAC;;gBAC/B,KAAgB,IAAA,gBAAA,SAAA,WAAW,CAAA,wCAAA,iEAAE;oBAAxB,IAAM,CAAC,wBAAA;oBACR,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC;iBAC/B;;;;;;;;;YACD,GAAG,IAAI,sBAAsB,CAAC;;gBAC9B,KAAmB,IAAA,cAAA,SAAA,SAAS,CAAA,oCAAA,2DAAE;oBAAzB,IAAM,IAAI,sBAAA;oBACX,GAAG,IAAI,MAAM,CAAC;;wBACd,KAAgB,IAAA,2BAAA,SAAA,OAAO,CAAA,CAAA,gCAAA,qDAAE;4BAApB,IAAM,CAAC,oBAAA;4BACR,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,SAAS,EAAE;gCACnC,GAAG,IAAI,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC;6BACvE;yBACJ;;;;;;;;;oBACD,GAAG,IAAI,OAAO,CAAC;iBAClB;;;;;;;;;YACD,GAAG,IAAI,kBAAkB,CAAC;YAC1B,OAAO,GAAG,CAAC;SACd;QAEM,0CAAuB,GAA9B,UAA+B,KAAa,EAAE,cAAqC;YAArC,+BAAA,EAAA,6BAAqC;YAC/E,QACI,cAAc;gBACd,uCAAuC;gBACvC,kDAAkD;gBAClD,UAAU;gBACV,qCAAqC;gBACrC,uDAAuD;gBACvD,0CAA0C;gBAC1C,wDAAwD;gBACxD,4CAA4C;gBAC5C,uDAAuD;gBACvD,4CAA4C;gBAC5C,iDAAiD;gBACjD,KAAK;gBACL,cAAc;gBACd,IAAI;gBACJ,IAAI,IAAI,EAAE;gBACV,OAAO;gBACP,8BAA8B;gBAC9B,KAAK;gBACL,sBAAsB,EACxB;SACL;iCACJ;KAAA;;IC5CD;;;IAIA;QAAA;;QACI,iCAAG,GAAH,UAAI,GAAW,EAAE,KAAa;YAC1B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACpC;QAED,iCAAG,GAAH,UAAI,GAAW;YACX,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACpC;QAED,oCAAM,GAAN,UAAO,GAAW;YACd,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SAChC;QAED,uCAAS,GAAT,UAAU,eAAuB,EAAE,KAAU,EAAE,QAA8B;YACzE,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC1E;QAED,uCAAS,GAAT,UAAU,eAAuB;YAC7B,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACxD,OAAO,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;SACvD;QAED,oCAAM,GAAN,UAAO,eAAuB;YAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;;;2IA5BQ,mBAAmB;+IAAnB,mBAAmB,cADN,MAAM;sHACnB,mBAAmB;sBAD/BM,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCkF9B,wCAAoB,MAAiB,EAAU,mBAAwC,EAAU,KAAwB;YAArG,WAAM,GAAN,MAAM,CAAW;YAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;YAAU,UAAK,GAAL,KAAK,CAAmB;YAvB/G,mBAAc,GAA8B,IAAIC,eAAY,EAAE,CAAC;YAC/D,gBAAW,GAAyC,IAAIA,eAAY,EAAE,CAAC;YACvE,gBAAW,GAAiC,IAAIA,eAAY,EAAkB,CAAC;YAC/E,iBAAY,GAAiD,IAAIA,eAAY,EAAE,CAAC;YAChF,qBAAgB,GAAG,IAAIA,eAAY,EAAE,CAAC;YACtC,2BAAsB,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC5C,0BAAqB,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC3C,qBAAgB,GAAG,IAAIA,eAAY,EAAE,CAAC;YAMhD,qBAAgB,GAAa,EAAE,CAAC;YAEhC,oBAAe,GAAY,KAAK,CAAC;YACjC,qBAAgB,GAAY,KAAK,CAAC;YAClC,eAAU,GAAGP,kBAAU,CAAC;YACxB,cAAS,GAAG,IAAIQ,0BAAc,CAAI,IAAI,EAAE,EAAE,CAAC,CAAC;YAEpC,oBAAe,GAAwB,EAAE,CAAC;YAC1C,eAAU,GAAG,EAAE,CAAC;YA6BxB,eAAU,GAAG,UAAC,MAAyB,EAAE,OAAU,IAAK,OAAA,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAA,CAAC;YACvG,eAAU,GAAG,UAAC,GAAM,EAAE,MAAyB,IAAK,OAAA,YAAY,CAAC,UAAU,CAAI,MAAM,EAAE,GAAG,CAAC,GAAA,CAAC;;;YA4hB5F,sBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC;YACnD,sBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC;YACnD,qBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;YACjD,wBAAmB,GAAG,YAAY,CAAC,mBAAmB,CAAC;YACvD,+BAA0B,GAAG,YAAY,CAAC,0BAA0B,CAAC;YACrE,+BAA0B,GAAG,YAAY,CAAC,0BAA0B,CAAC;YACrE,oBAAe,GAAG,YAAY,CAAC,eAAe,CAAC;SA9jB8E;QAhD7H,sBACI,wDAAY;iBAGhB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;iBAND,UACiB,KAA0B;gBACvC,IAAI,CAAC,eAAe,GAAGC,YAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC7C;;;WAAA;QAMD,sBAAa,gDAAI;iBAIjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;iBAND,UAAkB,KAAU;gBACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;;;WAAA;QAKD,sBAAa,wDAAY;iBAIzB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;aAClC;iBAND,UAA0B,gBAAqB;gBAC3C,IAAI,CAAC,SAAS,GAAG,IAAID,0BAAc,CAAM,IAAI,EAAE,gBAAgB,CAAC,CAAC;aACpE;;;WAAA;QA+BD,iDAAQ,GAAR;YACI,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;QAED,wDAAe,GAAf;YAAA,iBAiBC;YAhBG,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,GAAS;gBACrC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;oBACb,OAAO;iBACV;gBAED,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,MAAM;oBAChC,IAAI,MAAM,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM,EAAE;wBAC7B,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC;qBACpC;yBAAM;wBACH,MAAM,CAAC,aAAa,GAAG,GAAG,CAAC,SAAuC,CAAC;qBACtE;iBACJ,CAAC,CAAC;aACN,CAAC,CAAC;YAEH,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAKO,wDAAe,GAAf;YACJ,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;aACjD;YAED,IAAI,CAAC,UAAU,GAAG,IAAIE,uBAAkB,CAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,UAAC,IAAI,EAAE,QAAQ;gBACjD,IAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAExD,IAAI,CAAC,OAAO,EAAE;oBACV,OAAO,EAAE,CAAC;iBACb;gBAED,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;aAC3C,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEjC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAEO,sDAAa,GAAb;YACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,KAAK,IAAI,GAAA,CAAC,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,KAAK,GAAA,CAAC,CAAC;YACpH,IAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;;gBAErC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC3C;SACJ;QAED,qDAAY,GAAZ,UAAa,GAAM;YACf,IAAI,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;aAClC;iBAAM;gBACH,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAChC;YAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3D;QAED,sDAAa,GAAb,UAAc,GAAM;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACxC;QAED,qDAAY,GAAZ;YAAA,iBAIC;YAHG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;YAElH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3D;QAED,sDAAa,GAAb;YACI,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;SAClC;QAED,2DAAkB,GAAlB;YAAA,iBA0CC;YAzCG,OAAO,UAAC,GAAM,EAAE,OAAe;;gBAC3B,IAAM,UAAU,GAAuB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wCAChD,MAAM;oBACb,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;;qBAE/B;oBAED,IAAI,KAAK,GAAGD,YAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;oBACnC,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;wCACjB,KAAK;qBACf;oBAED,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;oBACf,IAAI,MAAM,CAAC,IAAI,KAAKT,kBAAU,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAKA,kBAAU,CAAC,IAAI,EAAE;wBACxE,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,IAAI,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;wBACpD,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC,OAAO,EAAE,GAAA,CAAC,CAAC;qBACnE;yBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC7B,KAAK,GAAGS,YAAC,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;wBAC3B,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAAA,YAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,GAAA,CAAC,CAAC;qBAC/D;yBAAM;wBACH,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAAA,YAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,GAAA,CAAC,CAAC;qBAC/D;oBAED,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;wCACP,KAAK;qBACf;;;oBAvBL,KAAqB,IAAA,eAAA,SAAA,UAAU,CAAA,sCAAA;wBAA1B,IAAM,MAAM,uBAAA;8CAAN,MAAM;;;qBAwBhB;;;;;;;;;gBAED,IAAI,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/C,IAAI,OAAK,GAAG,KAAK,CAAC;oBAElB,UAAU,CAAC,OAAO,CAAC,UAAC,MAAM;wBACtB,IAAM,KAAK,GAAGA,YAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;wBACrC,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;wBACxC,OAAK,GAAG,OAAK,IAAI,WAAW,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;qBAChE,CAAC,CAAC;oBACH,OAAO,OAAK,CAAC;iBAChB;gBAED,OAAO,IAAI,CAAC;aACf,CAAC;SACL;QAED,uDAAc,GAAd,UAAe,KAAa,EAAE,KAAU;YACpC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,GAAA,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC5F,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,OAAO;aACV;YAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACrE,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;QAED,wDAAe,GAAf;YACI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,MAAyB;gBACnD,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC;gBACjC,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;aACnC,CAAC,CAAC;;YAGH,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;SACjC;;;;;QAMD,yDAAgB,GAAhB,UAAiB,MAAmB;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC;QAED,kEAAyB,GAAzB,UAA0B,OAAU,EAAE,MAAyB;YAC3D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBACvC,OAAO;aACV;YAED,IAAI,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;gBAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;aACjE;YAED,OAAO,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC;SACnD;QAED,kEAAyB,GAAzB,UAA0B,OAAU,EAAE,MAAyB;YAC3D,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBAC5B,OAAO;aACV;YAED,IAAI,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;gBAC/C,OAAO,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;aACjE;YAED,OAAO,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC;SACnD;QAED,kDAAS,GAAT,UAAU,OAAU,EAAE,MAAyB;YAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;SAC5C;QAED,0DAAiB,GAAjB,UAAkB,OAAU,EAAE,MAAyB,EAAE,KAAU;YAC/D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACjE;QAED,2DAAkB,GAAlB,UAAmB,OAAU,EAAE,MAAyB;YACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;SACjD;QAED,iEAAwB,GAAxB,UAAyB,OAAU,EAAE,MAAyB;YAC1D,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;SACvD;QAED,gEAAuB,GAAvB,UAAwB,OAAU,EAAE,MAAyB;YACzD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;SACtD;QAED,2DAAkB,GAAlB,UAAmB,OAAU,EAAE,MAAyB;YACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;SACjD;QAEO,6DAAoB,GAApB,UAAqB,GAAM;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC9B;QAEO,2DAAkB,GAAlB,UAAmB,GAAM;YAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aAC1B;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC9B;SACJ;QAEO,0DAAiB,GAAjB,UAAkB,cAAiC;YACvD,IAAI,MAAM,GAAuB,EAAE,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;gBAClB,IAAI,KAAK,GAAGA,YAAC,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,cAAc,GAAG,KAAK,CAAC;gBAE3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACtB,KAAK,GAAGA,YAAC,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;oBAC3B,cAAc,GAAG,KAAK,CAAC;iBAC1B;gBAED,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,EAAE;oBACvD,OAAO;iBACV;gBAED,IAAM,gBAAgB,GAAG,cAAc,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,KAAK,GAAA,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;gBAE9H,MAAM,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,KAAK;oBACX,aAAa,EAAE,cAAc;oBAC7B,OAAO,EAAE,gBAAgB;iBAC5B,CAAC,CAAC;aACN,CAAC,CAAC;YAEH,MAAM,GAAGA,YAAC,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,CAAmB,IAAK,OAAA,CAAC,CAAC,aAAa,GAAA,CAAC,CAAC;YAEpE,OAAO,MAAM,CAAC;SACjB;;QAGD,0DAAiB,GAAjB,UAAkB,KAAa;;SAE9B;QAED,8DAAqB,GAArB,UAAsB,KAAqC;YACvD,IAAI,CAAC,KAAK,EAAE;gBACR,OAAO;aACV;YACD,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,IAAI,QAAQ,GAAA,CAAC,CAAC;YAC5E,IAAM,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,gBAAgB,CAAC,KAAK,CAAC,aAAa,CAAC,GAAA,CAAC,CAAC;YAClH,IAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,gBAAgB,CAAC,KAAK,CAAC,YAAY,CAAC,GAAA,CAAC,CAAC;YAChH,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,EAAE;gBAC9D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;gBACjF,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;QAKD,wDAAe,GAAf,UAAgB,KAAU;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACnD,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAEO,qDAAY,GAAZ;YACJ,IAAM,OAAO,GAAuB,EAAE,CAAC;YAEvC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,MAAM;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;oBACtB,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;iBAC5B;gBAED,OAAO,CAAC,IAAI,CAAC;oBACT,GAAG,EAAE,MAAM,CAAC,KAAK;oBACjB,IAAI,EAAE,MAAM,CAAC,UAAU;oBACvB,MAAM,EAAE,MAAM,CAAC,YAAY;iBAC9B,CAAC,CAAC;aACN,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACpD;SACJ;QAEO,mDAAU,GAAV,UAAW,EAAU,EAAE,KAAsB;YACjD,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,IAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7C,IAAI,EAAE,KAAK,aAAa,IAAI,KAAK,KAAK,gBAAgB,EAAE;gBACpD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,OAAA,EAAE,YAAY,EAAE,KAAK,EAAS,CAAC,CAAC;gBAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAA,EAAE,KAAK,OAAA,EAAE,YAAY,EAAE,KAAK,EAAS,CAAC,CAAC;aAC7D;SACJ;QAEO,kDAAS,GAAT;;YAEJ,IAAI,QAAQ,GAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;YACnE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;QAEO,oDAAW,GAAX;YACJ,IAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,aAAa,GAAA,CAAC,CAAC;YACzE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;gBACX,OAAO;aACV;YAED,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;YAC/C,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC;YAEtD,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;aAC1C;;YAGD,IAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAkB,CAAC;YAC9E,IAAI,gBAAgB,EAAE;gBAClB,IAAM,SAAS,GAA6B,gBAAgB,CAAC,SAAS,EAAE;sBAClE,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE;sBAC3C,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;gBAClD,gBAAgB,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;aAC5D;YAED,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC9B;;;QAMD,yDAAgB,GAAhB,UAAiB,cAAiC;YAAlD,iBAuBC;YAtBG,IAAM,IAAI,GAAuB;gBAC7B,cAAc,EAAEA,YAAC,CAAC,SAAS,CAAC,cAAc,CAAC;gBAC3C,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;aACvD,CAAC;YAEF,IAAM,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBACnE,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,OAAO;gBACd,UAAU,EAAE,eAAe;gBAC3B,IAAI,MAAA;aACP,CAAC,CAAC;YAEH,qBAAqB;iBAChB,WAAW,EAAE;iBACb,IAAI,CAACE,cAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,UAAC,QAAgC;gBACxC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;oBACtC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAC9B,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBAC9B;aACJ,CAAC,CAAC;SACV;;;QAMO,uDAAc,GAAd,UAAe,QAAgC;YACnD,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;gBACvC,OAAO;aACV;YAED,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,cAAe,CAAC,KAAK,GAAA,CAAC,CAAC;YAE5F,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC;aAC9D;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAEO,oDAAW,GAAX,UAAY,QAAgC;YAChD,IAAI,QAAQ,CAAC,iBAAiB,KAAK,KAAK,EAAE;gBACtC,OAAO;aACV;YAED,IAAM,UAAU,GAAG,QAAQ,CAAC,cAAe,CAAC,KAAK,CAAC;YAClD,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAe,CAAC,aAAa,CAAC;YAEzD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,MAAM;gBAChC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,KAAK,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;aAC9E,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;;;QAMD,sDAAa,GAAb;YACI,IAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAEhD,IAAM,KAAK,GAAG,kBAAkB,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;YAE3F,IAAI,KAAK,EAAE;gBACP,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM;oBAAE,OAAO;gBACpB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzE,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC,KAAK,EAAE,CAAC;aAClB;SACJ;;QAGD,sDAAa,GAAb;;;;;;;;;;;;;;;;;;;SAmBC;QAEO,6DAAoB,GAApB;YACJ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;aAClC;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;aAClC;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvF;QAEO,gFAAuC,GAAvC;YAAA,iBAMP;YALG,IAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAEjD,OAAOF,YAAC,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAM;gBAC9B,OAAOA,YAAC,CAAC,IAAI,CAAC,GAAG,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;aAC7C,CAAC,CAAC;SACN;QAEO,gEAAuB,GAAvB;YACJ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,KAAK,IAAI,GAAA,CAAC,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,KAAK,GAAA,CAAC,CAAC;SACtG;;;QAKO,wDAAe,GAAf;;YACJ,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE;gBACtE,OAAO;aACV;YAED,IAAM,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAwB,CAAC;YAE/H,IAAI,CAAC,mBAAmB,EAAE;gBACtB,OAAO;aACV;YAED,IAAM,eAAe,GAAGA,YAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oCAC5C,GAAG;gBACV,IAAM,KAAK,GAAG,mBAAmB,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,GAAA,CAAC,CAAC;gBAC1E,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACd,IAAM,aAAa,GAAG,OAAK,YAAY,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,GAAA,CAAC,CAAC;;oBAGhF,OAAK,YAAY,CAAC,aAAa,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;;oBAE9E,OAAK,eAAe,CAAC,OAAK,YAAY,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;iBACjE;;;;gBATL,KAAkB,IAAA,oBAAA,SAAA,eAAe,CAAA,gDAAA;oBAA5B,IAAM,GAAG,4BAAA;4BAAH,GAAG;iBAUb;;;;;;;;;SACJ;QAEO,yDAAgB,GAAhB;YACJ,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE;gBACtE,OAAO;aACV;YAED,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAClG;QAEO,wDAAe,GAAf,UAAgB,KAAY,EAAE,aAAqB,EAAE,KAAa;YACtE,IAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YAClC,KAAK,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACpC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;SACvB;;;QAKO,0DAAiB,GAAjB;YACJ,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE;gBAC1C,OAAO;aACV;YAED,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC9B,OAAO;aACV;YAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,YAAY,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,eAAe,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,WAAW,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,WAAW,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;YAE1D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,UAAC,IAAY,EAAE,QAAgB,EAAE,MAAc;gBAChF,IAAI,MAAM,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;oBAChC,OAAO,UAAQ,MAAQ,CAAC;iBAC3B;gBAED,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAM,UAAU,GAAG,IAAI,GAAG,QAAQ,CAAC;;gBAEnC,IAAM,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,EAAE,MAAM,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC;gBACvG,OAAU,UAAU,GAAG,CAAC,WAAM,QAAQ,YAAO,MAAQ,CAAC;aACzD,CAAC;SACL;;;QAKD,wDAAe,GAAf;YACI,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,UAAU,KAAKT,kBAAU,CAAC,KAAK,GAAA,CAAC,CAAC;YAExF,IAAI,cAAc,EAAE;gBAChB,OAAO,gBAAgB,CAAC;aAC3B;YAED,OAAO,EAAE,CAAC;SACb;QAED,2DAAkB,GAAlB,UAAmB,MAAyB;YACxC,QAAQ,MAAM,CAAC,UAAU;gBACrB,KAAKA,kBAAU,CAAC,OAAO;oBACnB,OAAO,SAAS,CAAC;gBACrB,KAAKA,kBAAU,CAAC,IAAI;oBAChB,OAAO,OAAO,CAAC;gBACnB,KAAKA,kBAAU,CAAC,KAAK;oBACjB,OAAO,QAAQ,CAAC;aACvB;YACD,OAAO,EAAE,CAAC;SACb;;;sJA1mBQ,8BAA8B;+HAA9B,8BAA8B,6kBAyC5BY,iBAAY,uEACZC,WAAO,2DC1EtB,8wWA0OA;sHD1Ma,8BAA8B;sBAL1CT,YAAS;uBAAC;wBACP,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,8CAA8C;wBAC3D,SAAS,EAAE,CAAC,8CAA8C,CAAC;qBAC9D;yLAGG,kBAAkB;0BADjBU,QAAK;oBAIN,mBAAmB;0BADlBA,QAAK;oBAIF,YAAY;0BADfA,QAAK;oBASO,IAAI;0BAAhBA,QAAK;oBAQO,YAAY;0BAAxBA,QAAK;oBAQI,cAAc;0BAAvBC,SAAM;oBACG,WAAW;0BAApBA,SAAM;oBACG,WAAW;0BAApBA,SAAM;oBACG,YAAY;0BAArBA,SAAM;oBACG,gBAAgB;0BAAzBA,SAAM;oBACG,sBAAsB;0BAA/BA,SAAM;oBACG,qBAAqB;0BAA9BA,SAAM;oBACG,gBAAgB;0BAAzBA,SAAM;oBAEkB,SAAS;0BAAjCC,YAAS;2BAACJ,iBAAY;oBACH,IAAI;0BAAvBI,YAAS;2BAACH,WAAO;;;IErCtB;QAAA;;;;sIAAa,cAAc;uIAAd,cAAc,YAlBnBI,oBAAc;YACdC,kBAAc;YACdC,kBAAe;YACfC,wBAAqB;YACrBC,oBAAiB;YACjBC,kBAAe;YACfC,gBAAa;YACbC,iBAAc;YACdC,kBAAa;YACbC,uBAAkB;YAClBC,oBAAe;YACfC,iBAAa;YACbC,mBAAc;YACdC,oBAAgB;YAChBC,kBAAe;uIAIV,cAAc,aAFZ,EAAE,YAhBTd,oBAAc;YACdC,kBAAc;YACdC,kBAAe;YACfC,wBAAqB;YACrBC,oBAAiB;YACjBC,kBAAe;YACfC,gBAAa;YACbC,iBAAc;YACdC,kBAAa;YACbC,uBAAkB;YAClBC,oBAAe;YACfC,iBAAa;YACbC,mBAAc;YACdC,oBAAgB;YAChBC,kBAAe;sHAIV,cAAc;sBApB1BC,WAAQ;uBAAC;wBACN,OAAO,EAAE;4BACLf,oBAAc;4BACdC,kBAAc;4BACdC,kBAAe;4BACfC,wBAAqB;4BACrBC,oBAAiB;4BACjBC,kBAAe;4BACfC,gBAAa;4BACbC,iBAAc;4BACdC,kBAAa;4BACbC,uBAAkB;4BAClBC,oBAAe;4BACfC,iBAAa;4BACbC,mBAAc;4BACdC,oBAAgB;4BAChBC,kBAAe;yBAClB;wBACD,SAAS,EAAE,EAAE;qBAChB;;;;QCtBD;;;;sJAAa,8BAA8B;uJAA9B,8BAA8B,iBAJxB,8BAA8B,EAAE,sBAAsB,EAAE,sBAAsB,aADnFE,gBAAY,EAAEC,cAAW,EAAEC,sBAAmB,EAAE,cAAc,aAE9D,8BAA8B;uJAG/B,8BAA8B,YAL9B,CAACF,gBAAY,EAAEC,cAAW,EAAEC,sBAAmB,EAAE,cAAc,CAAC;sHAKhE,8BAA8B;sBAN1CH,WAAQ;uBAAC;wBACN,OAAO,EAAE,CAACC,gBAAY,EAAEC,cAAW,EAAEC,sBAAmB,EAAE,cAAc,CAAC;wBACzE,YAAY,EAAE,CAAC,8BAA8B,EAAE,sBAAsB,EAAE,sBAAsB,CAAC;wBAC9F,OAAO,EAAE,CAAC,8BAA8B,CAAC;wBACzC,eAAe,EAAE,CAAC,sBAAsB,CAAC;qBAC5C;;;ICbD;;;;ICAA;;;;;;;;;;;;;;"}